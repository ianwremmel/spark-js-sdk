import AnswerMessage from './answer';
import ErrorMessage from './error';
import OfferMessage from './offer';
import OfferRequestMessage from './offer-request';
import OfferResponseMessage from './offer-response';
import OkMessage from './ok';

export {default as AnswerMessage} from './answer';
export {default as ErrorMessage} from './error';
export {default as OfferMessage} from './offer';
export {default as OfferRequestMessage} from './offer-request';
export {default as OfferResponseMessage} from './offer-response';
export {default as OkMessage} from './ok';
export {default as RoapMessage} from './roap-message';

/**
 * Parses a ROAP message object into the appropriate RoapMessage derivative.
 * @param {Object} obj
 * @returns {RoapMessage}
 */
export default function fromObject(obj) {
  switch (obj.messageType) {
    case 'OFFER_REQUEST':
      return new OfferRequestMessage(obj);
    case 'OFFER_RESPONSE':
      return new OfferResponseMessage(obj);
    case 'ANSWER':
      return new AnswerMessage(obj);
    case 'ERROR':
      return new ErrorMessage(obj);
    case 'OFFER':
      return new OfferMessage(obj);
    case 'OK':
      return new OkMessage(obj);
    default:
      throw new Error('`obj` not recognized as valid ROAP message');
  }
}
