import RoapMessage from './roap-message';

/**
 * An OFFER message
 */
export default class OfferMessage extends RoapMessage {
  messageType = 'OFFER';

  tieBreaker = 0;

  sdps = [];

  deferred;

  /**
   * constructor
   * @param {number} seq
   * @param {Array<string>} sdps
   */
  constructor(options) {
    if (!options.sdps.length) {
      throw new Error('atleast one SDP is required');
    }

    super(options);
    if (!this.tieBreaker) {
      this.tieBreaker = RoapMessage.generateTieBreaker();
    }

    if (!this.sdps.length) {
      this.sdps = options.sdps;
    }
  }

  /**
   * Indicates if this message is valid according to its
   * {@link RoapMessage#messageType}
   * @see {@link RoapMessage#isValid()}
   * @returns {boolean}
   */
  isValid() {
    return Boolean(this.version === 2 && this.messageType === 'OFFER' && this.sdps && this.sdps.length);
  }

  // toJSON() {
  //   return {
  //     messageType: this.messageType,
  //     sdps: this.sdps,
  //     seq: this.seq,
  //     tieBreaker: this.tieBreaker
  //   };
  // }

  waitForAnswer() {
    return this.deferred;
  }
}
